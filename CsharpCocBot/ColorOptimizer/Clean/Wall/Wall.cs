// This file was generated by a tool. Any change may be lost. 
// Generated by ColorOptimizer 12:29:09 vendredi 6 fÃ©vrier 2015
// Original tool written by FastFrench

// Wall1 : 488 colors (start 493 => all good 493 => not in bad 488)
// Wall10 : 644 colors (start 759 => all good 759 => not in bad 644)
// Wall11 : 923 colors (start 980 => all good 980 => not in bad 923)
// Wall2 : 448 colors (start 504 => all good 504 => not in bad 448)
// Wall3 : 442 colors (start 491 => all good 491 => not in bad 442)
// Wall4 : 742 colors (start 814 => all good 814 => not in bad 742)
// Wall5 : 928 colors (start 942 => all good 942 => not in bad 928)
// Wall6 : 261 colors (start 264 => all good 264 => not in bad 261)
// Wall7 : 392 colors (start 402 => all good 402 => not in bad 392)
// Wall8 : 460 colors (start 555 => all good 555 => not in bad 460)
// Wall9 : 766 colors (start 848 => all good 848 => not in bad 766)

namespace CoC.Bot.Data.ColorList {

	public class Wall : ColorListBase {
		public enum Item {
			Wall1,
			Wall10,
			Wall11,
			Wall2,
			Wall3,
			Wall4,
			Wall5,
			Wall6,
			Wall7,
			Wall8,
			Wall9,
		}

		public override string GenericName
		{
			get { return "Wall"; }
		}

		static private ColorListItem[] _items = {
		// Wall1 has 488 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall1",
				new int[] {
					0x006B4D30, // weight: 2 
					0x00513C28, // weight: 2 
					0x00905830, // weight: 2 
					0x00453320, // weight: 2 
					0x0094703B, // weight: 1 
					0x00262613, // weight: 1 
					0x0079592C, // weight: 1 
					0x00EEC070, // weight: 1 
					0x00F6C971, // weight: 1 
					0x00433013, // weight: 1 
				},
				14 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall10 has 644 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall10",
				new int[] {
					0x00585040, // weight: 23 
					0x00585240, // weight: 9 
					0x00383B38, // weight: 7 
					0x00585340, // weight: 7 
					0x00282821, // weight: 7 
					0x00484438, // weight: 6 
					0x00706860, // weight: 6 
					0x00202220, // weight: 6 
					0x00807C78, // weight: 6 
					0x002C2C28, // weight: 5 
				},
				82 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall11 has 923 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall11",
				new int[] {
					0x00202830, // weight: 11 
					0x00222A30, // weight: 6 
					0x003C3E40, // weight: 4 
					0x00202A30, // weight: 4 
					0x00202730, // weight: 3 
					0x00202930, // weight: 3 
					0x00222930, // weight: 3 
					0x00505E6B, // weight: 2 
					0x00465056, // weight: 2 
					0x00484E55, // weight: 2 
				},
				40 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall2 has 448 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall2",
				new int[] {
					0x00DCD0C8, // weight: 5 
					0x00585858, // weight: 4 
					0x00DCD0C4, // weight: 3 
					0x00E0DCD8, // weight: 3 
					0x00E0D4CC, // weight: 3 
					0x00585758, // weight: 3 
					0x004C4E50, // weight: 3 
					0x00504E50, // weight: 3 
					0x00D7C7B7, // weight: 2 
					0x00DACAC2, // weight: 2 
				},
				31 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall3 has 442 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall3",
				new int[] {
					0x00887468, // weight: 31 
					0x00505458, // weight: 24 
					0x00505058, // weight: 22 
					0x00887868, // weight: 18 
					0x00C8B8B0, // weight: 16 
					0x00D0C0B8, // weight: 14 
					0x00907C70, // weight: 13 
					0x00887768, // weight: 9 
					0x00887568, // weight: 8 
					0x00505358, // weight: 6 
				},
				161 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall4 has 742 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall4",
				new int[] {
					0x00383428, // weight: 16 
					0x00373830, // weight: 9 
					0x00484035, // weight: 9 
					0x00484034, // weight: 9 
					0x00484030, // weight: 8 
					0x00383A35, // weight: 7 
					0x008D8478, // weight: 6 
					0x00463C30, // weight: 6 
					0x008F8478, // weight: 5 
					0x00888078, // weight: 5 
				},
				80 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall5 has 928 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall5",
				new int[] {
					0x00F8D068, // weight: 16 
					0x00B07828, // weight: 15 
					0x00685838, // weight: 13 
					0x00B07A28, // weight: 10 
					0x00B07C28, // weight: 8 
					0x00F8CC68, // weight: 7 
					0x00F0C460, // weight: 7 
					0x00B88028, // weight: 7 
					0x00705D38, // weight: 7 
					0x00A87427, // weight: 7 
				},
				97 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall6 has 261 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall6",
				new int[] {
					0x00783068, // weight: 29 
					0x00F034D0, // weight: 20 
					0x00602060, // weight: 20 
					0x00B83490, // weight: 10 
					0x00EC34D0, // weight: 10 
					0x00782C58, // weight: 10 
					0x00D00CD8, // weight: 9 
					0x00ED34D0, // weight: 8 
					0x00A83478, // weight: 8 
					0x00EB34D0, // weight: 7 
				},
				131 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall7 has 392 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall7",
				new int[] {
					0x00483458, // weight: 28 
					0x00483058, // weight: 20 
					0x00481C60, // weight: 9 
					0x00583C68, // weight: 9 
					0x00401F58, // weight: 8 
					0x00503860, // weight: 8 
					0x00401C58, // weight: 7 
					0x00401B58, // weight: 5 
					0x00481E60, // weight: 5 
					0x00483358, // weight: 5 
				},
				104 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall8 has 460 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall8",
				new int[] {
					0x00202428, // weight: 22 
					0x00201C20, // weight: 14 
					0x00272428, // weight: 9 
					0x00F8FCFF, // weight: 5 
					0x00202422, // weight: 5 
					0x00202421, // weight: 5 
					0x00282428, // weight: 5 
					0x00202828, // weight: 5 
					0x0018181A, // weight: 5 
					0x00685D58, // weight: 4 
				},
				79 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		// Wall9 has 766 colors (computed from 1 good files and 10 bad files) 
			new ColorListItem(
				"Wall9",
				new int[] {
					0x00303440, // weight: 15 
					0x00282C38, // weight: 12 
					0x00484448, // weight: 9 
					0x00403438, // weight: 8 
					0x00706C70, // weight: 4 
					0x00141818, // weight: 4 
					0x00202228, // weight: 3 
					0x00303640, // weight: 3 
					0x002B333B, // weight: 3 
					0x00303840, // weight: 3 
				},
				64 // Minimum number of pixels from that colorList that should be found on each building of this kind
			),

		};

	public override ColorListItem[] Items { get { return _items; }}
	}
}

