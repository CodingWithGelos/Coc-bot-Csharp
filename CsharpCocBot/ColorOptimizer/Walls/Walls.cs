// This file was generated by a tool. Any change may be lost. 
// Generated by ColorOptimizer 10:24:17 vendredi 6 fÃ©vrier 2015
// Original tool written by FastFrench

// WallLVL1 : 0 colors (start 262 => all good 0 => not in bad 0)
//    => the last colors for WallLVL1 were killed by ../../Walls\WallLVL1\3.PNG
// WallLVL4 : 1 colors (start 524 => all good 2 => not in bad 1)
// WallLVL5 : 1 colors (start 470 => all good 1 => not in bad 1)
// WallLVL6 : 0 colors (start 350 => all good 0 => not in bad 0)
//    => the last colors for WallLVL6 were killed by ../../Walls\WallLVL6\8.PNG
// WallLVL8 : 1 colors (start 458 => all good 1 => not in bad 1)

namespace CoC.Bot.Data.ColorList {

	public static class Walls  {
		public enum Items {
			WallLVL1,
			WallLVL4,
			WallLVL5,
			WallLVL6,
			WallLVL8,
		}

		// WallLVL1 has 0 colors (computed from 10 good files and 35 bad files) 
		static int[] WallLVL1 = {
			};
		static int WallLVL1_count = 0; // Minimum number of pixels from that colorList that should be found on each building of this kind

		// WallLVL4 has 1 colors (computed from 5 good files and 40 bad files) 
		static int[] WallLVL4 = {
			0x008C8478, // weight: 7 
			};
		static int WallLVL4_count = 7; // Minimum number of pixels from that colorList that should be found on each building of this kind

		// WallLVL5 has 1 colors (computed from 10 good files and 35 bad files) 
		static int[] WallLVL5 = {
			0x00F8CC68, // weight: 32 
			};
		static int WallLVL5_count = 32; // Minimum number of pixels from that colorList that should be found on each building of this kind

		// WallLVL6 has 0 colors (computed from 10 good files and 35 bad files) 
		static int[] WallLVL6 = {
			};
		static int WallLVL6_count = 0; // Minimum number of pixels from that colorList that should be found on each building of this kind

		// WallLVL8 has 1 colors (computed from 10 good files and 35 bad files) 
		static int[] WallLVL8 = {
			0x00282828, // weight: 20 
			};
		static int WallLVL8_count = 20; // Minimum number of pixels from that colorList that should be found on each building of this kind


		static public int[] GetColorList(Items item)
		{
			switch(item)
			{
				case Items.WallLVL1: return WallLVL1;
				case Items.WallLVL4: return WallLVL4;
				case Items.WallLVL5: return WallLVL5;
				case Items.WallLVL6: return WallLVL6;
				case Items.WallLVL8: return WallLVL8;
				default: return null;
			}
		} // GetColorList

		static public int GetColorCount(Items item)
		{
			switch(item)
			{
				case Items.WallLVL1: return WallLVL1_count;
				case Items.WallLVL4: return WallLVL4_count;
				case Items.WallLVL5: return WallLVL5_count;
				case Items.WallLVL6: return WallLVL6_count;
				case Items.WallLVL8: return WallLVL8_count;
				default: return 0;
			}
		} // GetColorCount
	}
}

